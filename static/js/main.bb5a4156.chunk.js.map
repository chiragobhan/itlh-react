{"version":3,"sources":["logo.svg","App.js","MyToDoClassComponent.js","MyToDoHooksComponent.js","ClockClassComponent.js","ClockHooksComponent.js","CrudClass.js","CrudHooks.js","index.js"],"names":["module","exports","App","className","src","logo","alt","href","target","rel","MyToDoClassComponent","props","state","pendingTaskList","completedTaskList","task","handleTaskTyping","bind","addItemToTask","markDone","event","this","setState","value","taskValue","currentTaskList","push","pendingTaskListCopy","completedTaskListCopy","i","length","splice","style","display","margin","type","placeholder","onChange","onClick","map","checked","padding","textDecorationLine","textDecorationStyle","React","Component","MyToDoHooksComponent","useState","setTask","setPendingTaskList","setCompletedTaskList","setChecked","e","ClockClassComponent","date","Date","toLocaleTimeString","intervalId","setInterval","tiktock","clearInterval","justifyContent","alignItems","flexDirection","ClockHooksComponent","setDate","useEffect","CrudClass","record","recordList","name","email","locality","age","handleChange","addRecord","editRecord","deleteRecord","alert","currentRecordList","removeRecordFromList","required","min","max","colSpan","index","CrudHooks","setRecord","setRecordList","AppRoutes","to","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb5a4156.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\n\r\nclass MyToDoClassComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pendingTaskList: [],\r\n            completedTaskList: [],\r\n            task: ''\r\n        }\r\n        this.handleTaskTyping = this.handleTaskTyping.bind(this);\r\n        this.addItemToTask = this.addItemToTask.bind(this);\r\n        this.markDone = this.markDone.bind(this);\r\n    }\r\n\r\n    handleTaskTyping(event) {\r\n        this.setState({ task: event.target.value });\r\n    }\r\n\r\n    addItemToTask() {\r\n        let taskValue = this.state.task;\r\n        let currentTaskList = this.state.pendingTaskList;\r\n        currentTaskList.push(taskValue);\r\n        this.setState({\r\n            task: '',\r\n            pendingTaskList: currentTaskList\r\n        });\r\n    }\r\n\r\n    markDone(task) {\r\n        let pendingTaskListCopy = this.state.pendingTaskList;\r\n        let completedTaskListCopy = this.state.completedTaskList;\r\n        for (let i = 0; i < pendingTaskListCopy.length; i++) {\r\n            if (pendingTaskListCopy[i] === task) {\r\n                pendingTaskListCopy.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        completedTaskListCopy.push(task);\r\n        this.setState({\r\n            pendingTaskList: pendingTaskListCopy,\r\n            completedTaskList: completedTaskListCopy\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            /* Creating a div element which will center align all its child elements */\r\n            <div style={{\r\n                display: 'table',\r\n                margin: '0 auto'\r\n            }}>\r\n                <h1>My ToDo App by Class</h1>\r\n                <input type=\"text\" placeholder=\"Enter a task\" value={this.state.task} onChange={this.handleTaskTyping} />\r\n                <button onClick={this.addItemToTask}>Add</button>\r\n                {this.state.pendingTaskList.length > 0 ? <h3>Pending Tasks:</h3> : null}\r\n                <ul>\r\n                    <table>\r\n                        <tbody>\r\n                            {\r\n                                this.state.pendingTaskList.map((task) =>\r\n                                    <tr>\r\n                                        <td><li><input type=\"checkbox\" checked={false} onClick={() => this.markDone(task)} /></li></td>\r\n                                        <td style={{ padding: '5px' }}>{task}</td>\r\n                                        {/* A button can also be used instead of a checkbox */}\r\n                                        {/* <td><button onClick={() => this.markDone(task)}>Done</button></td> */}\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </ul>\r\n                {this.state.completedTaskList.length > 0 ? <h3>Completed Tasks:</h3> : null}\r\n                <ul>\r\n                    <table>\r\n                        <tbody>\r\n                            {\r\n                                this.state.completedTaskList.map((task) =>\r\n                                    <tr>\r\n                                        <td style={{\r\n                                            padding: '5px', textDecorationLine: 'line-through',\r\n                                            textDecorationStyle: 'solid'\r\n                                        }}>\r\n                                            <li>{task}</li>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyToDoClassComponent;","import React, { useState } from 'react';\r\n\r\nfunction MyToDoHooksComponent()\r\n{\r\n    let [task,setTask] = useState('');\r\n    let [pendingTaskList,setPendingTaskList] = useState([]);\r\n    let [completedTaskList, setCompletedTaskList] = useState([]);\r\n    let [checked,setChecked] = useState(false);\r\n\r\n    function handleChange(event) \r\n    {\r\n        setTask(event.target.value);\r\n    }\r\n\r\n    function addItemToTask()\r\n    {\r\n        let pendingTaskListCopy = pendingTaskList;\r\n        pendingTaskListCopy.push(task);\r\n        setPendingTaskList(pendingTaskListCopy);\r\n        setTask('');\r\n    }\r\n\r\n    function markDone(task)\r\n    {\r\n        let pendingTaskListCopy = pendingTaskList;\r\n        let completedTaskListCopy = completedTaskList;\r\n        for (let i = 0; i < pendingTaskListCopy.length; i++) {\r\n            if (pendingTaskListCopy[i] === task)\r\n            {\r\n                pendingTaskListCopy.splice(i,1);\r\n                break;\r\n            }\r\n        }\r\n        completedTaskListCopy.push(task);\r\n        setCompletedTaskList(completedTaskListCopy);\r\n        setTask('');\r\n    }\r\n\r\n    return (\r\n        /* Creating a div element which will center align all its child elements */\r\n        <div style={{\r\n            display: 'table',\r\n            margin: '0 auto'\r\n        }}>\r\n            <h1>My ToDo App by Hooks</h1>\r\n            <input type=\"text\" placeholder=\"Enter a task\" value={task} onChange={handleChange} />\r\n            <button onClick={addItemToTask}>Add</button>\r\n            {pendingTaskList.length > 0 ? <h3>Pending Tasks:</h3> : null}\r\n            <ul>\r\n                <table>\r\n                    <tbody>\r\n                        {\r\n                            pendingTaskList.map((task) =>\r\n                                <tr>\r\n                                    <td><li><input type=\"checkbox\" checked={false} onClick={() => markDone(task)} onChange={e => setChecked(!checked)} /></li></td>\r\n                                    <td style={{ padding: '5px' }}>{task}</td>\r\n                                    {/* A button can also be used instead of a checkbox */}\r\n                                    {/* <td><button onClick={() => markDone(task)}>Done</button></td> */}\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </ul>\r\n            {completedTaskList.length > 0 ? <h3>Completed Tasks:</h3> : null}\r\n            <ul>\r\n                <table>\r\n                    <tbody>\r\n                        {\r\n                            completedTaskList.map((task) =>\r\n                                <tr>\r\n                                    <td style={{\r\n                                        padding: '5px', textDecorationLine: 'line-through',\r\n                                        textDecorationStyle: 'solid'\r\n                                    }}>\r\n                                        <li>{task}</li>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </ul>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default MyToDoHooksComponent;","import React from 'react';\r\n\r\n/* function Index()\r\n{\r\n    let [time, setTime] = useState(new Date().toLocaleTimeString());\r\n    return (\r\n        <div>\r\n            <h1>Holla</h1>\r\n            <h3>Time now is {time} </h3>\r\n        </div>\r\n    )\r\n} */\r\n\r\nclass ClockClassComponent extends React.Component\r\n{\r\n    // this is the constructor which is used to update the UI\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date().toLocaleTimeString()\r\n        }\r\n        //this is immutable, means we cannot modify it like this.state.date = 'sdfswd';\r\n    }\r\n    //runs after render()\r\n    componentDidMount()\r\n    {\r\n        this.intervalId = setInterval(()=>this.tiktock(),1000);\r\n    }\r\n    //runs when component is closed or destroyed\r\n    componentWillUMount()\r\n    {\r\n        clearInterval(this.intervalId);\r\n    }\r\n    tiktock()\r\n    {\r\n        //whenever state is changed or updated, render() is called again.\r\n        this.setState(\r\n            {\r\n                date: new Date().toLocaleTimeString()\r\n            }\r\n        )\r\n    }\r\n    //runs after constructor\r\n    render()\r\n    {\r\n        return(\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems:'center', flexDirection: 'column' }}>\r\n            <h1>Holla from Class</h1>\r\n            <h3>Time now is {new Date().toLocaleTimeString()} </h3>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClockClassComponent;","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction ClockHooksComponent() {\r\n    let [date,setDate] = useState(new Date().toLocaleTimeString());\r\n\r\n\r\n    function tiktock() {\r\n        setDate(new Date().toLocaleTimeString());\r\n    }\r\n    useEffect(() => {\r\n        let intervalId = setInterval(() => tiktock(), 1000);\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n            <h1>Holla from Hooks</h1>\r\n            <h3>Time now is {date} </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClockHooksComponent;","import React from 'react';\r\n\r\nclass CrudClass extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            record: [],\r\n            recordList: [],\r\n            name: '',\r\n            email: '',\r\n            locality: '',\r\n            age: '',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addRecord = this.addRecord.bind(this);\r\n        this.editRecord = this.editRecord.bind(this);\r\n        this.deleteRecord = this.deleteRecord.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (name === \"age\") {\r\n            if (value < 0 || value > 120) {\r\n                alert(\"The age should be between 0 - 120\");\r\n            }\r\n        }\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    addRecord() {\r\n        if (this.state.name !== '' && this.state.email !== '' && this.state.locality !== '' && this.state.age !== '') {\r\n            if ((this.state.age > -1) && (this.state.age <= 120)) {\r\n                let record = [this.state.name, this.state.email, this.state.locality, this.state.age];\r\n                let currentRecordList = this.state.recordList;\r\n                currentRecordList.push(record);\r\n                this.setState({\r\n                    name: '',\r\n                    email: '',\r\n                    locality: '',\r\n                    age: '',\r\n                    recordList: currentRecordList,\r\n                })\r\n            }\r\n            else {\r\n                alert('The age should be between 0 - 120');\r\n            }\r\n        }\r\n        else {\r\n            alert('Please Enter all Details');\r\n        }\r\n    }\r\n\r\n    editRecord(record) {\r\n        let removeRecordFromList = this.state.recordList;\r\n        for (let i = 0; i < removeRecordFromList.length; i++) {\r\n            if (removeRecordFromList[i] === record) {\r\n                removeRecordFromList.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        this.setState({\r\n            name: record[0],\r\n            email: record[1],\r\n            locality: record[2],\r\n            age: record[3],\r\n        })\r\n    }\r\n\r\n    deleteRecord(record) {\r\n        let removeRecordFromList = this.state.recordList;\r\n        for (let i = 0; i < removeRecordFromList.length; i++) {\r\n            if (removeRecordFromList[i] === record) {\r\n                removeRecordFromList.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        this.setState({\r\n            recordList: removeRecordFromList\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ display: 'table', margin: '0 auto' }}>\r\n                <h1>Covid-19 Survey Form by Class</h1>\r\n                <h4>Please enter the details below:</h4>\r\n                <form>\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Name\" value={this.state.name} onChange={this.handleChange} required /> &nbsp;&nbsp;\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleChange} required /> &nbsp;&nbsp;\r\n                <input type=\"text\" name=\"locality\" placeholder=\"Locality\" value={this.state.locality} onChange={this.handleChange} required /> &nbsp;&nbsp;\r\n                <input type=\"number\" name=\"age\" placeholder=\"Age\" min=\"0\" max=\"120\" value={this.state.age} onChange={this.handleChange} required /> &nbsp;&nbsp;\r\n                <button onClick={this.addRecord}>Submit</button> <br /><br />\r\n                </form>\r\n                <ul>\r\n                    <table>\r\n                        <thead><tr><th>{this.state.recordList.length > 0 ? \"Records:\" : null}</th></tr></thead> <br />\r\n                        {this.state.recordList.length > 0 ? <tbody>\r\n                            < tr >\r\n                                <th style={{ padding: '10px' }}>Sr. No.</th>\r\n                                <th style={{ padding: '10px' }}>Name</th>\r\n                                <th style={{ padding: '10px' }}>Email</th>\r\n                                <th style={{ padding: '10px' }}>Locality</th>\r\n                                <th style={{ padding: '10px' }}>Age</th>\r\n                                <th style={{ padding: '10px' }} colSpan=\"2\">Actions</th>\r\n                            </tr>\r\n                            {this.state.recordList.map((record, index) =>\r\n                                <tr>\r\n                                    <td style={{ padding: '10px' }}> <li> {index + 1} </li> </td>\r\n                                    <td style={{ padding: '10px' }}>{record[0]} </td>\r\n                                    <td style={{ padding: '10px' }}>{record[1]} </td>\r\n                                    <td style={{ padding: '10px' }}>{record[2]} </td>\r\n                                    <td style={{ padding: '10px' }}>{record[3]} </td>\r\n                                    <td style={{ padding: '10px' }}><button onClick={() => this.editRecord(record)}>Edit</button>&nbsp;&nbsp;</td>\r\n                                    <td><button onClick={() => this.deleteRecord(record)}>Delete</button></td>\r\n                                </tr>\r\n                            )\r\n                            }\r\n                        </tbody> : null}\r\n                    </table>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CrudClass;","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction CrudHooks() {\r\n\r\n    let [record, setRecord] = useState({ name: '', email: '', locality: '', age: '' });\r\n    let [recordList, setRecordList] = useState([]);\r\n\r\n    function handleChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (name === \"age\") {\r\n            if (value < 0 || value > 120) {\r\n                alert('The age should be between 0 - 120');\r\n            }\r\n        }\r\n        setRecord({\r\n            ...record,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    function addRecord() {\r\n        if (record.name !== '' && record.email !== '' && record.locality !== '' && record.age !== '') {\r\n            if ((record.age > -1) && (record.age <= 120)) {\r\n                record = { name: record.name, email: record.email, locality: record.locality, age: record.age }\r\n                let currentRecordList = recordList;\r\n                currentRecordList.push(record);\r\n                setRecord({ name: '', email: '', locality: '', age: '' });\r\n                setRecordList(currentRecordList);\r\n            }\r\n            else {\r\n                alert('The age should be between 0 - 120');\r\n            }\r\n        }\r\n        else {\r\n            alert('Please Enter all Details');\r\n        }\r\n    }\r\n\r\n    function editRecord(record) {\r\n        let currentRecordList = recordList;\r\n        for (let i = 0; i < currentRecordList.length; i++) {\r\n            if (currentRecordList[i] === record) {\r\n                currentRecordList.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        setRecord({ name: record.name, email: record.email, locality: record.locality, age: record.age });\r\n    }\r\n\r\n    function deleteRecord(record) {\r\n        let currentRecordList = recordList;\r\n        for (let i = 0; i < currentRecordList.length; i++) {\r\n            if (currentRecordList[i] === record) {\r\n                currentRecordList.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        setRecordList(currentRecordList);\r\n        setRecord({ name: '' });\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'table', margin: '0 auto' }}>\r\n            <h1>Covid-19 Survey Form by Hooks</h1>\r\n            <h4>Please enter the details below:</h4>\r\n            <form>\r\n                <input type=\"text\" name=\"name\" placeholder=\"Name\" value={record.name} onChange={handleChange} required /> &nbsp;&nbsp;\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" value={record.email} onChange={handleChange} required /> &nbsp;&nbsp;\r\n                <input type=\"text\" name=\"locality\" placeholder=\"Locality\" value={record.locality} onChange={handleChange} required /> &nbsp;&nbsp;\r\n                <input type=\"number\" name=\"age\" placeholder=\"Age\" min=\"0\" max=\"120\" value={record.age} onChange={handleChange} required /> &nbsp;&nbsp;\r\n                <button type=\"button\" onClick={addRecord}>Submit</button> <br /><br />\r\n            </form>\r\n            <ul>\r\n                <table>\r\n                    <thead><tr><th>{recordList.length > 0 ? \"Records:\" : null}</th></tr></thead> <br />\r\n                    {recordList.length > 0 ? <tbody>\r\n                        < tr >\r\n                            <th style={{ padding: '10px' }}>Sr. No.</th>\r\n                            <th style={{ padding: '10px' }}>Name</th>\r\n                            <th style={{ padding: '10px' }}>Email</th>\r\n                            <th style={{ padding: '10px' }}>Locality</th>\r\n                            <th style={{ padding: '10px' }}>Age</th>\r\n                            <th style={{ padding: '10px' }} colSpan=\"2\">Actions</th>\r\n                        </tr>\r\n                        {recordList.map((record, index) =>\r\n                            <tr>\r\n                                <td style={{ padding: '10px' }}> <li> {index + 1} </li> </td>\r\n                                <td style={{ padding: '10px' }}>{record.name} </td>\r\n                                <td style={{ padding: '10px' }}>{record.email} </td>\r\n                                <td style={{ padding: '10px' }}>{record.locality} </td>\r\n                                <td style={{ padding: '10px' }}>{record.age} </td>\r\n                                <td style={{ padding: '10px' }}><button onClick={() => editRecord(record)}>Edit</button>&nbsp;&nbsp;</td>\r\n                                <td><button onClick={() => deleteRecord(record)}>Delete</button></td>\r\n                            </tr>\r\n                        )\r\n                        }\r\n                    </tbody> : null}\r\n                </table>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrudHooks;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport MyToDoClassComponent from './MyToDoClassComponent';\r\nimport MyToDoHooksComponent from './MyToDoHooksComponent';\r\nimport ClockClassComponent from './ClockClassComponent';\r\nimport ClockHooksComponent from './ClockHooksComponent';\r\nimport CrudClass from './CrudClass';\r\nimport CrudHooks from './CrudHooks';\r\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nfunction AppRoutes() {\r\n    return (\r\n        <BrowserRouter>\r\n            <div>\r\n                <ul style={{ display: 'flex', justifyContent: 'center', margin: '20px' }}>\r\n                    <li style={{ margin: '20px' }}>\r\n                        <Link to=\"/todoClass\">ToDo Using Class</Link>\r\n                    </li>\r\n                    <li style={{ margin: '20px' }}>\r\n                        <Link to=\"/todoHooks\">ToDo Using Hooks</Link>\r\n                    </li>\r\n                    <li style={{ margin: '20px' }}>\r\n                        <Link to=\"/clockClass\">Clock using Class</Link>\r\n                    </li>\r\n                    <li style={{ margin: '20px' }}>\r\n                        <Link to=\"/clockHooks\">Clock using Hooks</Link>\r\n                    </li>\r\n                    <li style={{ margin: '20px' }}>\r\n                        <Link to=\"/crudClass\">Crud using Class</Link>\r\n                    </li>\r\n                    <li style={{ margin: '20px' }}>\r\n                        <Link to=\"/crudHooks\">Crud using Hooks</Link>\r\n                    </li>\r\n                </ul>\r\n                <Switch>\r\n                    <Route path=\"/todoClass\">\r\n                        <MyToDoClassComponent />\r\n                    </Route>\r\n                    <Route path=\"/todoHooks\">\r\n                        <MyToDoHooksComponent />\r\n                    </Route>\r\n                    <Route path=\"/clockClass\">\r\n                        <ClockClassComponent />\r\n                    </Route>\r\n                    <Route path=\"/clockHooks\">\r\n                        <ClockHooksComponent />\r\n                    </Route>\r\n                    <Route path=\"/crudClass\">\r\n                        <CrudClass />\r\n                    </Route>\r\n                    <Route path=\"/crudHooks\">\r\n                        <CrudHooks />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <App />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nReactDOM.render(< AppRoutes />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}