{"version":3,"sources":["logo.svg","App.js","TicTacToeComponent.js","MyToDoClassComponent.js","MyToDoHooksComponent.js","ClockClassComponent.js","ClockHooksComponent.js","CrudClass.js","CrudHooks.js","index.js"],"names":["module","exports","App","className","src","logo","alt","href","target","rel","TicTacToeComponent","useState","player1","setPlayer1","player2","setPlayer2","begin","setBegin","numberOfTurns","setNumberOfTurns","winnerAnnounced","setWinnerAnnounced","grid","resultSet","matrix","setMatrix","turn","setTurn","xPlacement","setXPlacement","oPlacement","setOPlacement","boxClick","position","matrixShadow","xPlacementShadow","oPlacementShadow","alert","push","useEffect","forEach","solution","includes","Container","Row","Form","Col","Control","placeholder","onChange","event","value","Button","variant","onClick","length","style","size","window","location","reload","border","disabled","MyToDoClassComponent","props","state","pendingTaskList","completedTaskList","task","handleTaskTyping","bind","addItemToTask","markDone","this","setState","taskValue","currentTaskList","pendingTaskListCopy","completedTaskListCopy","i","splice","display","margin","textAlign","marginRight","type","map","checked","padding","textDecorationLine","textDecorationStyle","React","Component","MyToDoHooksComponent","setTask","setPendingTaskList","setCompletedTaskList","setChecked","e","ClockClassComponent","date","Date","toLocaleTimeString","intervalId","setInterval","tiktock","clearInterval","justifyContent","alignItems","flexDirection","ClockHooksComponent","setDate","CrudClass","record","recordList","name","email","locality","age","handleChange","addRecord","editRecord","deleteRecord","currentRecordList","removeRecordFromList","required","min","max","colSpan","index","CrudHooks","setRecord","setRecordList","AppRoutes","to","path","ReactDOM","render","document","getElementById"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,kC,iLCyB5BC,MArBf,WACE,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,mCACO,4CADP,wBAGA,uBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,kB,qEC8LOC,MArMf,WAA+B,IAAD,EACEC,mBAAS,IADX,mBACrBC,EADqB,KACZC,EADY,OAEEF,mBAAS,IAFX,mBAErBG,EAFqB,KAEZC,EAFY,OAGFJ,oBAAS,GAHP,mBAGrBK,EAHqB,KAGdC,EAHc,OAIcN,mBAAS,GAJvB,mBAIrBO,EAJqB,KAINC,EAJM,OAKkBR,oBAAS,GAL3B,mBAKrBS,EALqB,KAKJC,EALI,KAOtBC,EAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAExCC,EAAY,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAjBe,EAoBAZ,mBAASW,GApBT,mBAoBrBE,EApBqB,KAoBbC,EApBa,OAqBJd,mBAAS,GArBL,mBAqBrBe,EArBqB,KAqBfC,EArBe,OAsBQhB,mBAAS,IAtBjB,mBAsBrBiB,EAtBqB,KAsBTC,EAtBS,OAuBQlB,mBAAS,IAvBjB,mBAuBrBmB,EAvBqB,KAuBTC,EAvBS,KAiD1B,SAASC,EAASC,GACd,IAAIC,EAAY,YAAOV,GACnBW,EAAgB,YAAOP,GACvBQ,EAAgB,YAAON,GAEI,KAA3BI,EAAaD,GACbI,MAAM,iDAGO,IAATX,GACAQ,EAAaD,GAAY,IACzBE,EAAiBG,KAAKL,GACtBJ,EAAcM,GACdR,EAAQ,KAERO,EAAaD,GAAY,IACzBG,EAAiBE,KAAKL,GACtBF,EAAcK,GACdT,EAAQ,IAEZR,EAAiBD,EAAgB,GACjCO,EAAUS,IAyClB,OAnBAK,qBAAU,WACFrB,EAAgB,GAlBpBK,EAAUiB,SAAQ,SAAAC,GACVb,EAAWc,SAASD,EAAS,KAC7Bb,EAAWc,SAASD,EAAS,KAC7Bb,EAAWc,SAASD,EAAS,MAC7BJ,MAAMzB,EAAU,kBAChBS,GAAmB,IAEnBS,EAAWY,SAASD,EAAS,KAC7BX,EAAWY,SAASD,EAAS,KAC7BX,EAAWY,SAASD,EAAS,MAC7BJ,MAAMvB,EAAU,kBAChBO,GAAmB,OAUL,IAAlBH,IACAmB,MAAM,cACNhB,GAAmB,MAExB,CAACH,IAYA,kBAACyB,EAAA,EAAD,CAAWxC,UAAU,eACjB,kBAACyC,EAAA,EAAD,CAAKzC,UAAU,6BACX,wBAAIA,UAAU,WAAd,2BAEO,IAAVa,EACG,kBAAC4B,EAAA,EAAD,CAAKzC,UAAU,eAAf,4aAGE,MACK,IAAVa,EACG,kBAAC6B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKD,IAAN,KACI,kBAACE,EAAA,EAAD,KACI,kBAACD,EAAA,EAAKE,QAAN,CAAcC,YAAY,gBAAgBC,SApGlE,SAA6BC,GACzBrC,EAAWqC,EAAM1C,OAAO2C,QAmGqEA,MAAOvC,KAEpF,kBAACkC,EAAA,EAAD,KACI,kBAACD,EAAA,EAAKE,QAAN,CAAcC,YAAY,gBAAgBC,SAnGlE,SAA6BC,GACzBnC,EAAWmC,EAAM1C,OAAO2C,QAkGqEA,MAAOrC,OAI1F,MACK,IAAVE,EACG,kBAAC4B,EAAA,EAAD,CAAKzC,UAAU,cACX,kBAACiD,EAAA,EAAD,CAAQC,QAAQ,kBAAkBC,QAtGlD,WACQ1C,IAAYE,EACZuB,MAAM,uCACDzB,EAAQ2C,OAAS,GAAKzC,EAAQyC,OAAS,EAC5CtC,GAAS,GAEToB,MAAM,oCAgGE,UACA,kBAACe,EAAA,EAAD,CAAQC,QAAQ,iBAAiBlD,UAAU,YAAYmD,QA9FvE,WACIzC,EAAW,IACXE,EAAW,IACXE,GAAS,GACTQ,EAAUH,KA0FE,WAEF,MAEK,IAAVN,EACG,yBAAKb,UAAU,aACU,IAApBiB,EACG,4CACiBR,EADjB,wBAC8C,6BAD9C,eAESE,EAFT,wBAEsC,6BAAM,6BAF5C,2BAGqBI,EAHrB,IAGoC,6BAChC,kCAAiB,IAATQ,EAAad,EAAUE,EAA/B,gBAJJ,IAI4D,8BAE1D,MAEe,IAApBM,EACG,kBAACwB,EAAA,EAAD,CAAKzC,UAAU,0BACX,kBAACiD,EAAA,EAAD,CAAQI,MAAO,CAAE,UAAa,OAAQ,YAAe,QAAUC,KAAK,KAAKJ,QAAQ,OAAOC,QAAS,kBAAMI,OAAOC,SAASC,QAAO,KAA9H,YACA,kBAACR,EAAA,EAAD,CAAQI,MAAO,CAAE,UAAa,QAAUC,KAAK,KAAKJ,QAAQ,UAAUC,QApD5F,WACI7B,EAAUH,GACVD,GAAmB,GACnBF,EAAiB,GACjBQ,EAAQ,GACRE,EAAc,IACdE,EAAc,MA8CM,gBAEF,KAEN,yBAAK5B,UAAU,aACX,kBAACyC,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,KACI,2BAAOe,OAAO,OACV,+BACI,4BACI,4BAAI,4BAAQ1D,UAAU,YAAYmD,QAAS,kBAAMtB,EAAS,IAAI8B,SAAU1C,GAApE,IAAuFI,EAAO,GAA9F,MACJ,4BAAI,4BAAQrB,UAAU,YAAYmD,QAAS,kBAAMtB,EAAS,IAAI8B,SAAU1C,GAApE,IAAuFI,EAAO,GAA9F,MACJ,4BAAI,4BAAQrB,UAAU,YAAYmD,QAAS,kBAAMtB,EAAS,IAAI8B,SAAU1C,GAApE,IAAuFI,EAAO,GAA9F,OAER,4BACI,4BAAI,4BAAQrB,UAAU,YAAYmD,QAAS,kBAAMtB,EAAS,IAAI8B,SAAU1C,GAApE,IAAuFI,EAAO,GAA9F,MACJ,4BAAI,4BAAQrB,UAAU,YAAYmD,QAAS,kBAAMtB,EAAS,IAAI8B,SAAU1C,GAApE,IAAuFI,EAAO,GAA9F,MACJ,4BAAI,4BAAQrB,UAAU,YAAYmD,QAAS,kBAAMtB,EAAS,IAAI8B,SAAU1C,GAApE,IAAuFI,EAAO,GAA9F,OAER,4BACI,4BAAI,4BAAQrB,UAAU,YAAYmD,QAAS,kBAAMtB,EAAS,IAAI8B,SAAU1C,GAApE,IAAuFI,EAAO,GAA9F,MACJ,4BAAI,4BAAQrB,UAAU,YAAYmD,QAAS,kBAAMtB,EAAS,IAAI8B,SAAU1C,GAApE,IAAuFI,EAAO,GAA9F,MACJ,4BAAI,4BAAQrB,UAAU,YAAYmD,QAAS,kBAAMtB,EAAS,IAAI8B,SAAU1C,GAApE,IAAuFI,EAAO,GAA9F,aAOP,IAApBJ,EACG,kBAACwB,EAAA,EAAD,CAAKzC,UAAU,cACX,kBAAC2C,EAAA,EAAD,KACI,kBAACM,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAAS,kBAAMI,OAAOC,SAASC,QAAO,KAA/D,cAGN,MAER,O,wCClGHG,E,kDA/FX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,gBAAiB,GACjBC,kBAAmB,GACnBC,KAAM,IAEV,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,SAAW,EAAKA,SAASF,KAAd,gBATD,E,6DAYFpB,GACbuB,KAAKC,SAAS,CAAEN,KAAMlB,EAAM1C,OAAO2C,U,sCAInC,IAAIwB,EAAYF,KAAKR,MAAMG,KACvBQ,EAAkBH,KAAKR,MAAMC,gBACjCU,EAAgBtC,KAAKqC,GACrBF,KAAKC,SAAS,CACVN,KAAM,GACNF,gBAAiBU,M,+BAIhBR,GAGL,IAFA,IAAIS,EAAsBJ,KAAKR,MAAMC,gBACjCY,EAAwBL,KAAKR,MAAME,kBAC9BY,EAAI,EAAGA,EAAIF,EAAoBtB,OAAQwB,IAC5C,GAAIF,EAAoBE,KAAOX,EAAM,CACjCS,EAAoBG,OAAOD,EAAG,GAC9B,MAGRD,EAAsBxC,KAAK8B,GAC3BK,KAAKC,SAAS,CACVR,gBAAiBW,EACjBV,kBAAmBW,M,+BAIjB,IAAD,OACL,OAEI,yBAAKtB,MAAO,CACRyB,QAAS,QACTC,OAAQ,WAER,oDACA,yBAAK1B,MAAO,CAAE2B,UAAW,SAAUD,OAAQ,WACvC,2BAAO1B,MAAO,CAAE4B,YAAa,QAAUC,KAAK,OAAOrC,YAAY,eAAeG,MAAOsB,KAAKR,MAAMG,KAAMnB,SAAUwB,KAAKJ,mBACrH,4BAAQf,QAASmB,KAAKF,eAAtB,QAEHE,KAAKR,MAAMC,gBAAgBX,OAAS,EAAI,8CAA0B,KACnE,4BACI,+BACI,+BAEQkB,KAAKR,MAAMC,gBAAgBoB,KAAI,SAAClB,GAAD,OAC3B,4BACI,4BAAI,4BAAI,2BAAOiB,KAAK,WAAWE,SAAS,EAAOjC,QAAS,kBAAM,EAAKkB,SAASJ,QAC5E,wBAAIZ,MAAO,CAAEgC,QAAS,QAAUpB,UASvDK,KAAKR,MAAME,kBAAkBZ,OAAS,EAAI,gDAA4B,KACvE,4BACI,+BACI,+BAEQkB,KAAKR,MAAME,kBAAkBmB,KAAI,SAAClB,GAAD,OAC7B,4BACI,wBAAIZ,MAAO,CACPgC,QAAS,MAAOC,mBAAoB,eACpCC,oBAAqB,UAErB,4BAAKtB,gB,GAnFduB,IAAMC,WCkF1BC,MAlFf,WAAiC,IAAD,EACNlF,mBAAS,IADH,mBACvByD,EADuB,KACjB0B,EADiB,OAEgBnF,mBAAS,IAFzB,mBAEvBuD,EAFuB,KAEN6B,EAFM,OAGoBpF,mBAAS,IAH7B,mBAGvBwD,EAHuB,KAGJ6B,EAHI,OAIArF,oBAAS,GAJT,mBAIvB4E,EAJuB,KAIdU,EAJc,KA+B5B,OAEI,yBAAKzC,MAAO,CACRyB,QAAS,QACTC,OAAQ,WAER,oDACA,yBAAK1B,MAAO,CAAE2B,UAAW,SAAUD,OAAQ,WACvC,2BAAO1B,MAAO,CAAE4B,YAAa,QAAUC,KAAK,OAAOrC,YAAY,eAAeG,MAAOiB,EAAMnB,SAjCvG,SAAsBC,GAClB4C,EAAQ5C,EAAM1C,OAAO2C,UAiCb,4BAAQG,QA9BpB,WACI,IAAIuB,EAAsBX,EAC1BW,EAAoBvC,KAAK8B,GACzB2B,EAAmBlB,GACnBiB,EAAQ,MA0BA,QAEH5B,EAAgBX,OAAS,EAAI,8CAA0B,KACxD,4BACI,+BACI,+BAEQW,EAAgBoB,KAAI,SAAClB,GAAD,OAChB,4BACI,4BAAI,4BAAI,2BAAOiB,KAAK,WAAWE,SAAS,EAAOjC,QAAS,kBAhCxF,SAAkBc,GAGd,IAFA,IAAIS,EAAsBX,EACtBY,EAAwBX,EACnBY,EAAI,EAAGA,EAAIF,EAAoBtB,OAAQwB,IAC5C,GAAIF,EAAoBE,KAAOX,EAAM,CACjCS,EAAoBG,OAAOD,EAAG,GAC9B,MAGRD,EAAsBxC,KAAK8B,GAC3B4B,EAAqBlB,GACrBgB,EAAQ,IAqBkFtB,CAASJ,IAAOnB,SAAU,SAAAiD,GAAC,OAAID,GAAYV,QACzG,wBAAI/B,MAAO,CAAEgC,QAAS,QAAUpB,UASvDD,EAAkBZ,OAAS,EAAI,gDAA4B,KAC5D,4BACI,+BACI,+BAEQY,EAAkBmB,KAAI,SAAClB,GAAD,OAClB,4BACI,wBAAIZ,MAAO,CACPgC,QAAS,MAAOC,mBAAoB,eACpCC,oBAAqB,UAErB,4BAAKtB,aCjB9B+B,E,kDAvCX,WAAYnC,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,CACTmC,MAAM,IAAIC,MAAOC,sBAHzB,E,gEASC,IAAD,OACI7B,KAAK8B,WAAaC,aAAY,kBAAI,EAAKC,YAAU,O,4CAKjDC,cAAcjC,KAAK8B,c,gCAKnB9B,KAAKC,SACD,CACI0B,MAAM,IAAIC,MAAOC,yB,+BAOzB,OACI,yBAAK9C,MAAO,CAAEyB,QAAS,OAAQ0B,eAAgB,SAAUC,WAAW,SAAUC,cAAe,WAC7F,gDACA,4CAAiB,IAAIR,MAAOC,qBAA5B,U,GApCsBX,IAAMC,WCWzBkB,MAtBf,WAAgC,IAAD,EACNnG,oBAAS,IAAI0F,MAAOC,sBADd,mBACtBF,EADsB,KACjBW,EADiB,KAc3B,OAPAxE,qBAAU,WACN,IAAIgE,EAAaC,aAAY,WAH7BO,GAAQ,IAAIV,MAAOC,wBAG2B,KAC9C,OAAO,WACHI,cAAcH,OAKlB,yBAAK/C,MAAO,CAAEyB,QAAS,OAAQ0B,eAAgB,SAAUC,WAAY,SAAUC,cAAe,WAC1F,gDACA,2CAAiBT,EAAjB,O,QC6GGY,E,kDA7HX,WAAYhD,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTgD,OAAQ,GACRC,WAAY,GACZC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,IAAK,IAET,EAAKC,aAAe,EAAKA,aAAajD,KAAlB,gBACpB,EAAKkD,UAAY,EAAKA,UAAUlD,KAAf,gBACjB,EAAKmD,WAAa,EAAKA,WAAWnD,KAAhB,gBAClB,EAAKoD,aAAe,EAAKA,aAAapD,KAAlB,gBAbL,E,yDAgBNpB,GACT,IAAIiE,EAAOjE,EAAM1C,OAAO2G,KACpBhE,EAAQD,EAAM1C,OAAO2C,MACZ,QAATgE,IACIhE,EAAQ,GAAKA,EAAQ,MACrBd,MAAM,qCAGdoC,KAAKC,SAAL,eACKyC,EAAOhE,M,kCAKZ,GAAwB,KAApBsB,KAAKR,MAAMkD,MAAoC,KAArB1C,KAAKR,MAAMmD,OAAwC,KAAxB3C,KAAKR,MAAMoD,UAAsC,KAAnB5C,KAAKR,MAAMqD,IAC9F,GAAK7C,KAAKR,MAAMqD,KAAO,GAAO7C,KAAKR,MAAMqD,KAAO,IAAM,CAClD,IAAIL,EAAS,CAACxC,KAAKR,MAAMkD,KAAM1C,KAAKR,MAAMmD,MAAO3C,KAAKR,MAAMoD,SAAU5C,KAAKR,MAAMqD,KAC7EK,EAAoBlD,KAAKR,MAAMiD,WACnCS,EAAkBrF,KAAK2E,GACvBxC,KAAKC,SAAS,CACVyC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,IAAK,GACLJ,WAAYS,SAIhBtF,MAAM,0CAIVA,MAAM,8B,iCAIH4E,GAEP,IADA,IAAIW,EAAuBnD,KAAKR,MAAMiD,WAC7BnC,EAAI,EAAGA,EAAI6C,EAAqBrE,OAAQwB,IAC7C,GAAI6C,EAAqB7C,KAAOkC,EAAQ,CACpCW,EAAqB5C,OAAOD,EAAG,GAC/B,MAGRN,KAAKC,SAAS,CACVyC,KAAMF,EAAO,GACbG,MAAOH,EAAO,GACdI,SAAUJ,EAAO,GACjBK,IAAKL,EAAO,O,mCAIPA,GAET,IADA,IAAIW,EAAuBnD,KAAKR,MAAMiD,WAC7BnC,EAAI,EAAGA,EAAI6C,EAAqBrE,OAAQwB,IAC7C,GAAI6C,EAAqB7C,KAAOkC,EAAQ,CACpCW,EAAqB5C,OAAOD,EAAG,GAC/B,MAGRN,KAAKC,SAAS,CACVwC,WAAYU,M,+BAIV,IAAD,OACL,OACI,yBAAKpE,MAAO,CAAEyB,QAAS,QAASC,OAAQ,WACpC,6DACA,+DACA,8BACI,2BAAOG,KAAK,OAAO8B,KAAK,OAAOnE,YAAY,OAAOG,MAAOsB,KAAKR,MAAMkD,KAAMlE,SAAUwB,KAAK8C,aAAcM,UAAQ,IADnH,YAEA,2BAAOxC,KAAK,QAAQ8B,KAAK,QAAQnE,YAAY,QAAQG,MAAOsB,KAAKR,MAAMmD,MAAOnE,SAAUwB,KAAK8C,aAAcM,UAAQ,IAFnH,YAGA,2BAAOxC,KAAK,OAAO8B,KAAK,WAAWnE,YAAY,WAAWG,MAAOsB,KAAKR,MAAMoD,SAAUpE,SAAUwB,KAAK8C,aAAcM,UAAQ,IAH3H,YAIA,2BAAOxC,KAAK,SAAS8B,KAAK,MAAMnE,YAAY,MAAM8E,IAAI,IAAIC,IAAI,MAAM5E,MAAOsB,KAAKR,MAAMqD,IAAKrE,SAAUwB,KAAK8C,aAAcM,UAAQ,IAJhI,YAKA,4BAAQvE,QAASmB,KAAK+C,WAAtB,UALA,IAKiD,6BAAM,8BAEvD,4BACI,+BACI,+BAAO,4BAAI,4BAAK/C,KAAKR,MAAMiD,WAAW3D,OAAS,EAAI,WAAa,QADpE,IAC4F,6BACvFkB,KAAKR,MAAMiD,WAAW3D,OAAS,EAAI,+BAChC,4BACI,wBAAIC,MAAO,CAAEgC,QAAS,SAAtB,WACA,wBAAIhC,MAAO,CAAEgC,QAAS,SAAtB,QACA,wBAAIhC,MAAO,CAAEgC,QAAS,SAAtB,SACA,wBAAIhC,MAAO,CAAEgC,QAAS,SAAtB,YACA,wBAAIhC,MAAO,CAAEgC,QAAS,SAAtB,OACA,wBAAIhC,MAAO,CAAEgC,QAAS,QAAUwC,QAAQ,KAAxC,YAEHvD,KAAKR,MAAMiD,WAAW5B,KAAI,SAAC2B,EAAQgB,GAAT,OACvB,4BACI,wBAAIzE,MAAO,CAAEgC,QAAS,SAAtB,IAAiC,gCAAMyC,EAAQ,EAAd,KAAjC,KACA,wBAAIzE,MAAO,CAAEgC,QAAS,SAAWyB,EAAO,GAAxC,KACA,wBAAIzD,MAAO,CAAEgC,QAAS,SAAWyB,EAAO,GAAxC,KACA,wBAAIzD,MAAO,CAAEgC,QAAS,SAAWyB,EAAO,GAAxC,KACA,wBAAIzD,MAAO,CAAEgC,QAAS,SAAWyB,EAAO,GAAxC,KACA,wBAAIzD,MAAO,CAAEgC,QAAS,SAAU,4BAAQlC,QAAS,kBAAM,EAAKmE,WAAWR,KAAvC,QAAhC,YACA,4BAAI,4BAAQ3D,QAAS,kBAAM,EAAKoE,aAAaT,KAAzC,gBAIL,Y,GAtHXtB,IAAMC,W,QCsGfsC,MAtGf,WAAsB,IAAD,EAESvH,mBAAS,CAAEwG,KAAM,GAAIC,MAAO,GAAIC,SAAU,GAAIC,IAAK,KAF5D,mBAEZL,EAFY,KAEJkB,EAFI,OAGiBxH,mBAAS,IAH1B,mBAGZuG,EAHY,KAGAkB,EAHA,KAKjB,SAASb,EAAarE,GAClB,IAAIiE,EAAOjE,EAAM1C,OAAO2G,KACpBhE,EAAQD,EAAM1C,OAAO2C,MACZ,QAATgE,IACIhE,EAAQ,GAAKA,EAAQ,MACrBd,MAAM,qCAGd8F,EAAU,2BACHlB,GADE,kBAEJE,EAAOhE,KA6ChB,OACI,yBAAKK,MAAO,CAAEyB,QAAS,QAASC,OAAQ,WACpC,6DACA,+DACA,8BACI,2BAAOG,KAAK,OAAO8B,KAAK,OAAOnE,YAAY,OAAOG,MAAO8D,EAAOE,KAAMlE,SAAUsE,EAAcM,UAAQ,IAD1G,YAEI,2BAAOxC,KAAK,QAAQ8B,KAAK,QAAQnE,YAAY,QAAQG,MAAO8D,EAAOG,MAAOnE,SAAUsE,EAAcM,UAAQ,IAF9G,YAGI,2BAAOxC,KAAK,OAAO8B,KAAK,WAAWnE,YAAY,WAAWG,MAAO8D,EAAOI,SAAUpE,SAAUsE,EAAcM,UAAQ,IAHtH,YAII,2BAAOxC,KAAK,SAAS8B,KAAK,MAAMnE,YAAY,MAAM8E,IAAI,IAAIC,IAAI,MAAM5E,MAAO8D,EAAOK,IAAKrE,SAAUsE,EAAcM,UAAQ,IAJ3H,YAKI,4BAAQxC,KAAK,SAAS/B,QAlDlC,WACI,GAAoB,KAAhB2D,EAAOE,MAAgC,KAAjBF,EAAOG,OAAoC,KAApBH,EAAOI,UAAkC,KAAfJ,EAAOK,IAC9E,GAAKL,EAAOK,KAAO,GAAOL,EAAOK,KAAO,IAAM,CAC1CL,EAAS,CAAEE,KAAMF,EAAOE,KAAMC,MAAOH,EAAOG,MAAOC,SAAUJ,EAAOI,SAAUC,IAAKL,EAAOK,KAC1F,IAAIK,EAAoBT,EACxBS,EAAkBrF,KAAK2E,GACvBkB,EAAU,CAAEhB,KAAM,GAAIC,MAAO,GAAIC,SAAU,GAAIC,IAAK,KACpDc,EAAcT,QAGdtF,MAAM,0CAIVA,MAAM,8BAoCF,UALJ,IAK8D,6BAAM,8BAEpE,4BACI,+BACI,+BAAO,4BAAI,4BAAK6E,EAAW3D,OAAS,EAAI,WAAa,QADzD,IACiF,6BAC5E2D,EAAW3D,OAAS,EAAI,+BACrB,4BACI,wBAAIC,MAAO,CAAEgC,QAAS,SAAtB,WACA,wBAAIhC,MAAO,CAAEgC,QAAS,SAAtB,QACA,wBAAIhC,MAAO,CAAEgC,QAAS,SAAtB,SACA,wBAAIhC,MAAO,CAAEgC,QAAS,SAAtB,YACA,wBAAIhC,MAAO,CAAEgC,QAAS,SAAtB,OACA,wBAAIhC,MAAO,CAAEgC,QAAS,QAAUwC,QAAQ,KAAxC,YAEHd,EAAW5B,KAAI,SAAC2B,EAAQgB,GAAT,OACZ,4BACI,wBAAIzE,MAAO,CAAEgC,QAAS,SAAtB,IAAiC,gCAAMyC,EAAQ,EAAd,KAAjC,KACA,wBAAIzE,MAAO,CAAEgC,QAAS,SAAWyB,EAAOE,KAAxC,KACA,wBAAI3D,MAAO,CAAEgC,QAAS,SAAWyB,EAAOG,MAAxC,KACA,wBAAI5D,MAAO,CAAEgC,QAAS,SAAWyB,EAAOI,SAAxC,KACA,wBAAI7D,MAAO,CAAEgC,QAAS,SAAWyB,EAAOK,IAAxC,KACA,wBAAI9D,MAAO,CAAEgC,QAAS,SAAU,4BAAQlC,QAAS,kBArD7E,SAAoB2D,GAEhB,IADA,IAAIU,EAAoBT,EACfnC,EAAI,EAAGA,EAAI4C,EAAkBpE,OAAQwB,IAC1C,GAAI4C,EAAkB5C,KAAOkC,EAAQ,CACjCU,EAAkB3C,OAAOD,EAAG,GAC5B,MAGRoD,EAAU,CAAEhB,KAAMF,EAAOE,KAAMC,MAAOH,EAAOG,MAAOC,SAAUJ,EAAOI,SAAUC,IAAKL,EAAOK,MA6CZG,CAAWR,KAAlC,QAAhC,YACA,4BAAI,4BAAQ3D,QAAS,kBA3CjD,SAAsB2D,GAElB,IADA,IAAIU,EAAoBT,EACfnC,EAAI,EAAGA,EAAI4C,EAAkBpE,OAAQwB,IAC1C,GAAI4C,EAAkB5C,KAAOkC,EAAQ,CACjCU,EAAkB3C,OAAOD,EAAG,GAC5B,MAGRqD,EAAcT,GACdQ,EAAU,CAAEhB,KAAM,KAkCiCO,CAAaT,KAApC,gBAIL,S,eCrF/B,SAASoB,IACL,OACI,kBAAC,IAAD,KACI,6BACI,wBAAI7E,MAAO,CAAEyB,QAAS,OAAQ0B,eAAgB,SAAUzB,OAAQ,SAC5D,wBAAI1B,MAAO,CAAE0B,OAAQ,SACjB,kBAAC,IAAD,CAAMoD,GAAG,cAAT,gBAEJ,wBAAI9E,MAAO,CAAE0B,OAAQ,SACjB,kBAAC,IAAD,CAAMoD,GAAG,cAAT,qBAEJ,wBAAI9E,MAAO,CAAE0B,OAAQ,SACjB,kBAAC,IAAD,CAAMoD,GAAG,cAAT,qBAEJ,wBAAI9E,MAAO,CAAE0B,OAAQ,SACjB,kBAAC,IAAD,CAAMoD,GAAG,eAAT,sBAEJ,wBAAI9E,MAAO,CAAE0B,OAAQ,SACjB,kBAAC,IAAD,CAAMoD,GAAG,eAAT,sBAEJ,wBAAI9E,MAAO,CAAE0B,OAAQ,SACjB,kBAAC,IAAD,CAAMoD,GAAG,cAAT,qBAEJ,wBAAI9E,MAAO,CAAE0B,OAAQ,SACjB,kBAAC,IAAD,CAAMoD,GAAG,cAAT,sBAGR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,cACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,cACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,cACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,eACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,eACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,cACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,cACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,KACR,kBAAC,EAAD,UAQxBC,IAASC,OAAO,kBAAEJ,EAAF,MACZK,SAASC,eAAe,W","file":"static/js/main.b8acf1d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\nimport './TicTacToe.scss';\r\n\r\nfunction TicTacToeComponent() {\r\n    let [player1, setPlayer1] = useState('');\r\n    let [player2, setPlayer2] = useState('');\r\n    let [begin, setBegin] = useState(false);\r\n    let [numberOfTurns, setNumberOfTurns] = useState(0);\r\n    let [winnerAnnounced, setWinnerAnnounced] = useState(false);\r\n\r\n    let grid = ['', '', '', '', '', '', '', '', ''];\r\n\r\n    let resultSet = [\r\n        [0, 1, 2],\r\n        [0, 3, 6],\r\n        [0, 4, 8],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [2, 4, 6],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n    ];\r\n\r\n    let [matrix, setMatrix] = useState(grid);\r\n    let [turn, setTurn] = useState(1);\r\n    let [xPlacement, setXPlacement] = useState([]);\r\n    let [oPlacement, setOPlacement] = useState([]);\r\n\r\n    function handlePlayer1Change(event) {\r\n        setPlayer1(event.target.value);\r\n    }\r\n\r\n    function handlePlayer2Change(event) {\r\n        setPlayer2(event.target.value);\r\n    }\r\n\r\n    function initiateGame() {\r\n        if (player1 === player2)\r\n            alert(\"Both players cannot have same names\");\r\n        else if (player1.length > 0 && player2.length > 0)\r\n            setBegin(true);\r\n        else\r\n            alert('Please enter both player names');\r\n    }\r\n\r\n    function resetGame() {\r\n        setPlayer1('');\r\n        setPlayer2('');\r\n        setBegin(false);\r\n        setMatrix(grid);\r\n    }\r\n\r\n    function boxClick(position) {\r\n        let matrixShadow = [...matrix];\r\n        let xPlacementShadow = [...xPlacement];\r\n        let oPlacementShadow = [...oPlacement];\r\n\r\n        if (matrixShadow[position] !== \"\") {\r\n            alert(\"You cannot override the value of that block!\");\r\n        }\r\n        else {\r\n            if (turn === 1) {\r\n                matrixShadow[position] = 'X';\r\n                xPlacementShadow.push(position);\r\n                setXPlacement(xPlacementShadow);\r\n                setTurn(2);\r\n            } else {\r\n                matrixShadow[position] = '0';\r\n                oPlacementShadow.push(position);\r\n                setOPlacement(oPlacementShadow);\r\n                setTurn(1);\r\n            }\r\n            setNumberOfTurns(numberOfTurns + 1);\r\n            setMatrix(matrixShadow);\r\n        }\r\n    }\r\n\r\n    function calculateResult() {\r\n        resultSet.forEach(solution => {\r\n            if (xPlacement.includes(solution[0]) &&\r\n                xPlacement.includes(solution[1]) &&\r\n                xPlacement.includes(solution[2])) {\r\n                alert(player1 + \" is the winner\");\r\n                setWinnerAnnounced(true);\r\n            }\r\n            if (oPlacement.includes(solution[0]) &&\r\n                oPlacement.includes(solution[1]) &&\r\n                oPlacement.includes(solution[2])) {\r\n                alert(player2 + \" is the winner\");\r\n                setWinnerAnnounced(true);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (numberOfTurns > 4) {\r\n            calculateResult();\r\n        }\r\n        if (numberOfTurns === 9) {\r\n            alert('Its a draw');\r\n            setWinnerAnnounced(true);\r\n        }\r\n    }, [numberOfTurns]);\r\n\r\n    function playAgain() {\r\n        setMatrix(grid);\r\n        setWinnerAnnounced(false);\r\n        setNumberOfTurns(0);\r\n        setTurn(1);\r\n        setXPlacement([]);\r\n        setOPlacement([]);\r\n    }\r\n\r\n    return (\r\n        <Container className=\"tic-tac-toe\">\r\n            <Row className=\"justify-content-md-center\">\r\n                <h1 className='heading'>Lets Play Tic Tac Toe</h1>\r\n            </Row>\r\n            {begin === false ?\r\n                <Row className=\"description\">\r\n                    A two player tic tac toe game. Both players enter their names and click the begin button. Once the button is pressed, Player 1 gets X and Player 2 gets O. The game begins with player 1 who can decide where to put the X. Then the turn goes to player 2 who can do the same. The game will check for 3 consecutive X's or 0's, whoever makes the first strike wins. Game is either a win or a draw. Game announces winner at the end.\r\n          </Row>\r\n                : null}\r\n            {begin === false ?\r\n                <Form>\r\n                    <Form.Row>\r\n                        <Col>\r\n                            <Form.Control placeholder=\"Player 1 Name\" onChange={handlePlayer1Change} value={player1} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Control placeholder=\"Player 2 Name\" onChange={handlePlayer2Change} value={player2} />\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n                : null}\r\n            {begin === false ?\r\n                <Row className=\"buttonArea\">\r\n                    <Button variant=\"outline-success\" onClick={initiateGame}>Begin!</Button>\r\n                    <Button variant=\"outline-danger\" className=\"reset-btn\" onClick={resetGame}>Reset!</Button>\r\n                </Row>\r\n                : null}\r\n\r\n            {begin === true ?\r\n                <div className=\"gameArea\">\r\n                    {winnerAnnounced === false ?\r\n                        <div>\r\n                            Player 1 is {player1} and will be using X <br />\r\n                    Player 2 is {player2} and will be using 0 <br /><br />\r\n                    Number of turns so far: {numberOfTurns} <br />\r\n                            <b>Its {turn === 1 ? player1 : player2}'s turn now!</b> <br />\r\n                        </div>\r\n                        : null}\r\n\r\n                    {winnerAnnounced === true ?\r\n                        <Row className=\"justify-content-center\">\r\n                            <Button style={{ 'marginTop': '20px', 'marginRight': '10px' }} size=\"lg\" variant=\"info\" onClick={() => window.location.reload(false)}>Restart!</Button>\r\n                            <Button style={{ 'marginTop': '20px' }} size=\"lg\" variant=\"success\" onClick={playAgain}>Play Again!</Button>\r\n                        </Row>\r\n                        : null}\r\n\r\n                    <div className=\"tableArea\">\r\n                        <Row>\r\n                            <Col>\r\n                                <table border=\"1px\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td><button className=\"boxButton\" onClick={() => boxClick(0)} disabled={winnerAnnounced}> {matrix[0]} </button></td>\r\n                                            <td><button className=\"boxButton\" onClick={() => boxClick(1)} disabled={winnerAnnounced}> {matrix[1]} </button></td>\r\n                                            <td><button className=\"boxButton\" onClick={() => boxClick(2)} disabled={winnerAnnounced}> {matrix[2]} </button></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><button className=\"boxButton\" onClick={() => boxClick(3)} disabled={winnerAnnounced}> {matrix[3]} </button></td>\r\n                                            <td><button className=\"boxButton\" onClick={() => boxClick(4)} disabled={winnerAnnounced}> {matrix[4]} </button></td>\r\n                                            <td><button className=\"boxButton\" onClick={() => boxClick(5)} disabled={winnerAnnounced}> {matrix[5]} </button></td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td><button className=\"boxButton\" onClick={() => boxClick(6)} disabled={winnerAnnounced}> {matrix[6]} </button></td>\r\n                                            <td><button className=\"boxButton\" onClick={() => boxClick(7)} disabled={winnerAnnounced}> {matrix[7]} </button></td>\r\n                                            <td><button className=\"boxButton\" onClick={() => boxClick(8)} disabled={winnerAnnounced}> {matrix[8]} </button></td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    {winnerAnnounced === false ?\r\n                        <Row className=\"endGameBtn\">\r\n                            <Col>\r\n                                <Button variant=\"danger\" onClick={() => window.location.reload(false)}>End Game</Button>\r\n                            </Col>\r\n                        </Row>\r\n                        : null}\r\n                </div>\r\n                : null}\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TicTacToeComponent;","import React from 'react';\r\n\r\nclass MyToDoClassComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pendingTaskList: [],\r\n            completedTaskList: [],\r\n            task: ''\r\n        }\r\n        this.handleTaskTyping = this.handleTaskTyping.bind(this);\r\n        this.addItemToTask = this.addItemToTask.bind(this);\r\n        this.markDone = this.markDone.bind(this);\r\n    }\r\n\r\n    handleTaskTyping(event) {\r\n        this.setState({ task: event.target.value });\r\n    }\r\n\r\n    addItemToTask() {\r\n        let taskValue = this.state.task;\r\n        let currentTaskList = this.state.pendingTaskList;\r\n        currentTaskList.push(taskValue);\r\n        this.setState({\r\n            task: '',\r\n            pendingTaskList: currentTaskList\r\n        });\r\n    }\r\n\r\n    markDone(task) {\r\n        let pendingTaskListCopy = this.state.pendingTaskList;\r\n        let completedTaskListCopy = this.state.completedTaskList;\r\n        for (let i = 0; i < pendingTaskListCopy.length; i++) {\r\n            if (pendingTaskListCopy[i] === task) {\r\n                pendingTaskListCopy.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        completedTaskListCopy.push(task);\r\n        this.setState({\r\n            pendingTaskList: pendingTaskListCopy,\r\n            completedTaskList: completedTaskListCopy\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            /* Creating a div element which will center align all its child elements */\r\n            <div style={{\r\n                display: 'table',\r\n                margin: '0 auto'\r\n            }}>\r\n                <h1>My ToDo App by Class</h1>\r\n                <div style={{ textAlign: 'center', margin: '20px 0' }}>\r\n                    <input style={{ marginRight: '10px' }} type=\"text\" placeholder=\"Enter a task\" value={this.state.task} onChange={this.handleTaskTyping} />\r\n                    <button onClick={this.addItemToTask}>Add</button>\r\n                </div>\r\n                {this.state.pendingTaskList.length > 0 ? <h3>Pending Tasks:</h3> : null}\r\n                <ul>\r\n                    <table>\r\n                        <tbody>\r\n                            {\r\n                                this.state.pendingTaskList.map((task) =>\r\n                                    <tr>\r\n                                        <td><li><input type=\"checkbox\" checked={false} onClick={() => this.markDone(task)} /></li></td>\r\n                                        <td style={{ padding: '5px' }}>{task}</td>\r\n                                        {/* A button can also be used instead of a checkbox */}\r\n                                        {/* <td><button onClick={() => this.markDone(task)}>Done</button></td> */}\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </ul>\r\n                {this.state.completedTaskList.length > 0 ? <h3>Completed Tasks:</h3> : null}\r\n                <ul>\r\n                    <table>\r\n                        <tbody>\r\n                            {\r\n                                this.state.completedTaskList.map((task) =>\r\n                                    <tr>\r\n                                        <td style={{\r\n                                            padding: '5px', textDecorationLine: 'line-through',\r\n                                            textDecorationStyle: 'solid'\r\n                                        }}>\r\n                                            <li>{task}</li>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyToDoClassComponent;","import React, { useState } from 'react';\r\n\r\nfunction MyToDoHooksComponent() {\r\n    let [task, setTask] = useState('');\r\n    let [pendingTaskList, setPendingTaskList] = useState([]);\r\n    let [completedTaskList, setCompletedTaskList] = useState([]);\r\n    let [checked, setChecked] = useState(false);\r\n\r\n    function handleChange(event) {\r\n        setTask(event.target.value);\r\n    }\r\n\r\n    function addItemToTask() {\r\n        let pendingTaskListCopy = pendingTaskList;\r\n        pendingTaskListCopy.push(task);\r\n        setPendingTaskList(pendingTaskListCopy);\r\n        setTask('');\r\n    }\r\n\r\n    function markDone(task) {\r\n        let pendingTaskListCopy = pendingTaskList;\r\n        let completedTaskListCopy = completedTaskList;\r\n        for (let i = 0; i < pendingTaskListCopy.length; i++) {\r\n            if (pendingTaskListCopy[i] === task) {\r\n                pendingTaskListCopy.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        completedTaskListCopy.push(task);\r\n        setCompletedTaskList(completedTaskListCopy);\r\n        setTask('');\r\n    }\r\n\r\n    return (\r\n        /* Creating a div element which will center align all its child elements */\r\n        <div style={{\r\n            display: 'table',\r\n            margin: '0 auto'\r\n        }}>\r\n            <h1>My ToDo App by Hooks</h1>\r\n            <div style={{ textAlign: 'center', margin: '20px 0' }}>\r\n                <input style={{ marginRight: '10px' }} type=\"text\" placeholder=\"Enter a task\" value={task} onChange={handleChange} />\r\n                <button onClick={addItemToTask}>Add</button>\r\n            </div>\r\n            {pendingTaskList.length > 0 ? <h3>Pending Tasks:</h3> : null}\r\n            <ul>\r\n                <table>\r\n                    <tbody>\r\n                        {\r\n                            pendingTaskList.map((task) =>\r\n                                <tr>\r\n                                    <td><li><input type=\"checkbox\" checked={false} onClick={() => markDone(task)} onChange={e => setChecked(!checked)} /></li></td>\r\n                                    <td style={{ padding: '5px' }}>{task}</td>\r\n                                    {/* A button can also be used instead of a checkbox */}\r\n                                    {/* <td><button onClick={() => markDone(task)}>Done</button></td> */}\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </ul>\r\n            {completedTaskList.length > 0 ? <h3>Completed Tasks:</h3> : null}\r\n            <ul>\r\n                <table>\r\n                    <tbody>\r\n                        {\r\n                            completedTaskList.map((task) =>\r\n                                <tr>\r\n                                    <td style={{\r\n                                        padding: '5px', textDecorationLine: 'line-through',\r\n                                        textDecorationStyle: 'solid'\r\n                                    }}>\r\n                                        <li>{task}</li>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyToDoHooksComponent;","import React from 'react';\r\n\r\n/* function Index()\r\n{\r\n    let [time, setTime] = useState(new Date().toLocaleTimeString());\r\n    return (\r\n        <div>\r\n            <h1>Holla</h1>\r\n            <h3>Time now is {time} </h3>\r\n        </div>\r\n    )\r\n} */\r\n\r\nclass ClockClassComponent extends React.Component\r\n{\r\n    // this is the constructor which is used to update the UI\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            date: new Date().toLocaleTimeString()\r\n        }\r\n        //this is immutable, means we cannot modify it like this.state.date = 'sdfswd';\r\n    }\r\n    //runs after render()\r\n    componentDidMount()\r\n    {\r\n        this.intervalId = setInterval(()=>this.tiktock(),1000);\r\n    }\r\n    //runs when component is closed or destroyed\r\n    componentWillUMount()\r\n    {\r\n        clearInterval(this.intervalId);\r\n    }\r\n    tiktock()\r\n    {\r\n        //whenever state is changed or updated, render() is called again.\r\n        this.setState(\r\n            {\r\n                date: new Date().toLocaleTimeString()\r\n            }\r\n        )\r\n    }\r\n    //runs after constructor\r\n    render()\r\n    {\r\n        return(\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems:'center', flexDirection: 'column' }}>\r\n            <h1>Holla from Class</h1>\r\n            <h3>Time now is {new Date().toLocaleTimeString()} </h3>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClockClassComponent;","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction ClockHooksComponent() {\r\n    let [date,setDate] = useState(new Date().toLocaleTimeString());\r\n\r\n\r\n    function tiktock() {\r\n        setDate(new Date().toLocaleTimeString());\r\n    }\r\n    useEffect(() => {\r\n        let intervalId = setInterval(() => tiktock(), 1000);\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n            <h1>Holla from Hooks</h1>\r\n            <h3>Time now is {date} </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClockHooksComponent;","import React from 'react';\r\n\r\nclass CrudClass extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            record: [],\r\n            recordList: [],\r\n            name: '',\r\n            email: '',\r\n            locality: '',\r\n            age: '',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addRecord = this.addRecord.bind(this);\r\n        this.editRecord = this.editRecord.bind(this);\r\n        this.deleteRecord = this.deleteRecord.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (name === \"age\") {\r\n            if (value < 0 || value > 120) {\r\n                alert(\"The age should be between 0 - 120\");\r\n            }\r\n        }\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    addRecord() {\r\n        if (this.state.name !== '' && this.state.email !== '' && this.state.locality !== '' && this.state.age !== '') {\r\n            if ((this.state.age > -1) && (this.state.age <= 120)) {\r\n                let record = [this.state.name, this.state.email, this.state.locality, this.state.age];\r\n                let currentRecordList = this.state.recordList;\r\n                currentRecordList.push(record);\r\n                this.setState({\r\n                    name: '',\r\n                    email: '',\r\n                    locality: '',\r\n                    age: '',\r\n                    recordList: currentRecordList,\r\n                })\r\n            }\r\n            else {\r\n                alert('The age should be between 0 - 120');\r\n            }\r\n        }\r\n        else {\r\n            alert('Please Enter all Details');\r\n        }\r\n    }\r\n\r\n    editRecord(record) {\r\n        let removeRecordFromList = this.state.recordList;\r\n        for (let i = 0; i < removeRecordFromList.length; i++) {\r\n            if (removeRecordFromList[i] === record) {\r\n                removeRecordFromList.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        this.setState({\r\n            name: record[0],\r\n            email: record[1],\r\n            locality: record[2],\r\n            age: record[3],\r\n        })\r\n    }\r\n\r\n    deleteRecord(record) {\r\n        let removeRecordFromList = this.state.recordList;\r\n        for (let i = 0; i < removeRecordFromList.length; i++) {\r\n            if (removeRecordFromList[i] === record) {\r\n                removeRecordFromList.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        this.setState({\r\n            recordList: removeRecordFromList\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ display: 'table', margin: '0 auto' }}>\r\n                <h1>Covid-19 Survey Form by Class</h1>\r\n                <h4>Please enter the details below:</h4>\r\n                <form>\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Name\" value={this.state.name} onChange={this.handleChange} required /> &nbsp;&nbsp;\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleChange} required /> &nbsp;&nbsp;\r\n                <input type=\"text\" name=\"locality\" placeholder=\"Locality\" value={this.state.locality} onChange={this.handleChange} required /> &nbsp;&nbsp;\r\n                <input type=\"number\" name=\"age\" placeholder=\"Age\" min=\"0\" max=\"120\" value={this.state.age} onChange={this.handleChange} required /> &nbsp;&nbsp;\r\n                <button onClick={this.addRecord}>Submit</button> <br /><br />\r\n                </form>\r\n                <ul>\r\n                    <table>\r\n                        <thead><tr><th>{this.state.recordList.length > 0 ? \"Records:\" : null}</th></tr></thead> <br />\r\n                        {this.state.recordList.length > 0 ? <tbody>\r\n                            < tr >\r\n                                <th style={{ padding: '10px' }}>Sr. No.</th>\r\n                                <th style={{ padding: '10px' }}>Name</th>\r\n                                <th style={{ padding: '10px' }}>Email</th>\r\n                                <th style={{ padding: '10px' }}>Locality</th>\r\n                                <th style={{ padding: '10px' }}>Age</th>\r\n                                <th style={{ padding: '10px' }} colSpan=\"2\">Actions</th>\r\n                            </tr>\r\n                            {this.state.recordList.map((record, index) =>\r\n                                <tr>\r\n                                    <td style={{ padding: '10px' }}> <li> {index + 1} </li> </td>\r\n                                    <td style={{ padding: '10px' }}>{record[0]} </td>\r\n                                    <td style={{ padding: '10px' }}>{record[1]} </td>\r\n                                    <td style={{ padding: '10px' }}>{record[2]} </td>\r\n                                    <td style={{ padding: '10px' }}>{record[3]} </td>\r\n                                    <td style={{ padding: '10px' }}><button onClick={() => this.editRecord(record)}>Edit</button>&nbsp;&nbsp;</td>\r\n                                    <td><button onClick={() => this.deleteRecord(record)}>Delete</button></td>\r\n                                </tr>\r\n                            )\r\n                            }\r\n                        </tbody> : null}\r\n                    </table>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CrudClass;","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction CrudHooks() {\r\n\r\n    let [record, setRecord] = useState({ name: '', email: '', locality: '', age: '' });\r\n    let [recordList, setRecordList] = useState([]);\r\n\r\n    function handleChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        if (name === \"age\") {\r\n            if (value < 0 || value > 120) {\r\n                alert('The age should be between 0 - 120');\r\n            }\r\n        }\r\n        setRecord({\r\n            ...record,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    function addRecord() {\r\n        if (record.name !== '' && record.email !== '' && record.locality !== '' && record.age !== '') {\r\n            if ((record.age > -1) && (record.age <= 120)) {\r\n                record = { name: record.name, email: record.email, locality: record.locality, age: record.age }\r\n                let currentRecordList = recordList;\r\n                currentRecordList.push(record);\r\n                setRecord({ name: '', email: '', locality: '', age: '' });\r\n                setRecordList(currentRecordList);\r\n            }\r\n            else {\r\n                alert('The age should be between 0 - 120');\r\n            }\r\n        }\r\n        else {\r\n            alert('Please Enter all Details');\r\n        }\r\n    }\r\n\r\n    function editRecord(record) {\r\n        let currentRecordList = recordList;\r\n        for (let i = 0; i < currentRecordList.length; i++) {\r\n            if (currentRecordList[i] === record) {\r\n                currentRecordList.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        setRecord({ name: record.name, email: record.email, locality: record.locality, age: record.age });\r\n    }\r\n\r\n    function deleteRecord(record) {\r\n        let currentRecordList = recordList;\r\n        for (let i = 0; i < currentRecordList.length; i++) {\r\n            if (currentRecordList[i] === record) {\r\n                currentRecordList.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        setRecordList(currentRecordList);\r\n        setRecord({ name: '' });\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'table', margin: '0 auto' }}>\r\n            <h1>Covid-19 Survey Form by Hooks</h1>\r\n            <h4>Please enter the details below:</h4>\r\n            <form>\r\n                <input type=\"text\" name=\"name\" placeholder=\"Name\" value={record.name} onChange={handleChange} required /> &nbsp;&nbsp;\r\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" value={record.email} onChange={handleChange} required /> &nbsp;&nbsp;\r\n                <input type=\"text\" name=\"locality\" placeholder=\"Locality\" value={record.locality} onChange={handleChange} required /> &nbsp;&nbsp;\r\n                <input type=\"number\" name=\"age\" placeholder=\"Age\" min=\"0\" max=\"120\" value={record.age} onChange={handleChange} required /> &nbsp;&nbsp;\r\n                <button type=\"button\" onClick={addRecord}>Submit</button> <br /><br />\r\n            </form>\r\n            <ul>\r\n                <table>\r\n                    <thead><tr><th>{recordList.length > 0 ? \"Records:\" : null}</th></tr></thead> <br />\r\n                    {recordList.length > 0 ? <tbody>\r\n                        < tr >\r\n                            <th style={{ padding: '10px' }}>Sr. No.</th>\r\n                            <th style={{ padding: '10px' }}>Name</th>\r\n                            <th style={{ padding: '10px' }}>Email</th>\r\n                            <th style={{ padding: '10px' }}>Locality</th>\r\n                            <th style={{ padding: '10px' }}>Age</th>\r\n                            <th style={{ padding: '10px' }} colSpan=\"2\">Actions</th>\r\n                        </tr>\r\n                        {recordList.map((record, index) =>\r\n                            <tr>\r\n                                <td style={{ padding: '10px' }}> <li> {index + 1} </li> </td>\r\n                                <td style={{ padding: '10px' }}>{record.name} </td>\r\n                                <td style={{ padding: '10px' }}>{record.email} </td>\r\n                                <td style={{ padding: '10px' }}>{record.locality} </td>\r\n                                <td style={{ padding: '10px' }}>{record.age} </td>\r\n                                <td style={{ padding: '10px' }}><button onClick={() => editRecord(record)}>Edit</button>&nbsp;&nbsp;</td>\r\n                                <td><button onClick={() => deleteRecord(record)}>Delete</button></td>\r\n                            </tr>\r\n                        )\r\n                        }\r\n                    </tbody> : null}\r\n                </table>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CrudHooks;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport TicTacToeComponent from './TicTacToeComponent';\r\nimport MyToDoClassComponent from './MyToDoClassComponent';\r\nimport MyToDoHooksComponent from './MyToDoHooksComponent';\r\nimport ClockClassComponent from './ClockClassComponent';\r\nimport ClockHooksComponent from './ClockHooksComponent';\r\nimport CrudClass from './CrudClass';\r\nimport CrudHooks from './CrudHooks';\r\nimport { HashRouter, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nfunction AppRoutes() {\r\n    return (\r\n        <HashRouter>\r\n            <div>\r\n                <ul style={{ display: 'flex', justifyContent: 'center', margin: '15px' }}>\r\n                    <li style={{ margin: '15px' }}>\r\n                        <Link to=\"/TicTacToe\">Tic Tac Toe</Link>\r\n                    </li>\r\n                    <li style={{ margin: '15px' }}>\r\n                        <Link to=\"/todoClass\">ToDo Using Class</Link>\r\n                    </li>\r\n                    <li style={{ margin: '15px' }}>\r\n                        <Link to=\"/todoHooks\">ToDo Using Hooks</Link>\r\n                    </li>\r\n                    <li style={{ margin: '15px' }}>\r\n                        <Link to=\"/clockClass\">Clock using Class</Link>\r\n                    </li>\r\n                    <li style={{ margin: '15px' }}>\r\n                        <Link to=\"/clockHooks\">Clock using Hooks</Link>\r\n                    </li>\r\n                    <li style={{ margin: '15px' }}>\r\n                        <Link to=\"/crudClass\">Crud using Class</Link>\r\n                    </li>\r\n                    <li style={{ margin: '15px' }}>\r\n                        <Link to=\"/crudHooks\">Crud using Hooks</Link>\r\n                    </li>\r\n                </ul>\r\n                <Switch>\r\n                    <Route path=\"/TicTacToe\">\r\n                        <TicTacToeComponent />\r\n                    </Route>\r\n                    <Route path=\"/todoClass\">\r\n                        <MyToDoClassComponent />\r\n                    </Route>\r\n                    <Route path=\"/todoHooks\">\r\n                        <MyToDoHooksComponent />\r\n                    </Route>\r\n                    <Route path=\"/clockClass\">\r\n                        <ClockClassComponent />\r\n                    </Route>\r\n                    <Route path=\"/clockHooks\">\r\n                        <ClockHooksComponent />\r\n                    </Route>\r\n                    <Route path=\"/crudClass\">\r\n                        <CrudClass />\r\n                    </Route>\r\n                    <Route path=\"/crudHooks\">\r\n                        <CrudHooks />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <App />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nReactDOM.render(< AppRoutes />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}